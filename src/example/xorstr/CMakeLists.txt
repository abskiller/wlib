################################ 工程配置 ##################################

SET(EXAMPLE_NAME xorstr)
# 指定 CMake 最低版本
# CMAKE_MINIMUM_REQUIRED(VERSION 3.18)
# 构建项目的名称
# PROJECT(http)
# 项目添加编码虚选项
# ADD_COMPILE_OPTIONS("$<$<CXX_COMPILER_ID:MSVC>:/source-charset:utf-8>") 

# 设置头文件目录
# INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)
# 搜索源文件
FILE(GLOB SRC_LIST ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
# 设置输出目录
# 设置动态库的输出目录
# 添加可执行文件
ADD_EXECUTABLE(${EXAMPLE_NAME} ${SRC_LIST})

LINK_DIRECTORIES(${LIBRARY_OUTPUT_DIRECTORY}/debug)




# 设置动态库的输出目录
SET_TARGET_PROPERTIES(${EXAMPLE_NAME} PROPERTIES
    MSVC_RUNTIME_LIBRARY "MultiThreaded"
    VERSION "1.0.0"
    SOVERSION "6"
    NO_SONAME OFF
    # 设置动态库的输出目录
    ARCHIVE_OUTPUT_DIRECTORY ${LIBRARY_OUTPUT_PATH}/other
    ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${LIBRARY_OUTPUT_PATH}/debug
    ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${LIBRARY_OUTPUT_PATH}/release
    # windows dll文件输出
    RUNTIME_OUTPUT_DIRECTORY ${EXECUTABLE_OUTPUT_PATH}/other 
    RUNTIME_OUTPUT_DIRECTORY_DEBUG ${EXECUTABLE_OUTPUT_PATH}/debug
    RUNTIME_OUTPUT_DIRECTORY_RELEASE ${EXECUTABLE_OUTPUT_PATH}/release
  
    # linux so 文件输出
    LIBRARY_OUTPUT_DIRECTORY ${LIBRARY_OUTPUT_PATH}/other
    LIBRARY_OUTPUT_DIRECTORY_DEBUG ${LIBRARY_OUTPUT_PATH}/debug
    LIBRARY_OUTPUT_DIRECTORY_RELEASE ${LIBRARY_OUTPUT_PATH}/release
  
    # windows pdb文件
    PDB_OUTPUT_DIRECTORY ${LIBRARY_OUTPUT_PATH}/pdb
    PDB_OUTPUT_DIRECTORY_DEBUG ${LIBRARY_OUTPUT_PATH}/pdb
  
    OUTPUT_NAME ${EXAMPLE_NAME}
    # debug 版本加后缀
    DEBUG_POSTFIX "d"
)

# 链接静态库
TARGET_LINK_LIBRARIES(${EXAMPLE_NAME} PRIVATE ${PROJECT_NAME})

